#!/usr/bin/env ruby
# encoding: utf-8
require 'potam'

include GLI::App
include Dialog

program_desc 'Менеджер задач'

version Potam::VERSION

subcommand_option_handling :normal
arguments :strict

# ENV['GLI_DEBUG'] = 'true'

test_db = "#{File.expand_path(File.dirname(__FILE__))}/../test/test.db"
clean_db = "#{File.expand_path(File.dirname(__FILE__))}/../test/clean.db"
prod_db = "#{Dir.home}/.potam/potam.db"
if !File.file?(prod_db) 
  FileUtils.mkdir_p(File.dirname(prod_db))
  FileUtils.cp(clean_db, prod_db)
end

db = ENV['POTAM'] == 'test' ? Sequel.sqlite(test_db) : Sequel.sqlite(prod_db)
tasks = Tasks.new(db)
subtasks = Subtasks.new(db)
notes = Notes.new(db)
report = Report.new(db)

desc 'Указание номера задачи'
arg_name 'Номер задачи'
flag [:t,:task]

desc 'Пометить подзадачу как выполненную'
arg_name 'Номер подзадачи'
command :done do |c|
  c.action do |global_options,options,args|
    subtasks.finish!(args[0].to_i)
    say("Подзадача 'Подзадача #{args[0]}' завершена")
  end
end

desc 'Добавление задач, подзадач и заметок'
arg_name 'Тип добавляемого объекта'
command :add do |c|
  c.desc 'Добавить заметку'
  c.switch :n, :note, :negatable => false
  c.action do |global_options,options,args|
    if global_options[:task]
      if options[:note]
        Dialog.ask_new_note
        notes.create(task_id: global_options[:task], text: Dialog::new_note_text)
        say("Заметка к задаче ##{global_options[:task]} добавлена")
      else
        Dialog.ask_new_subtask
        subtasks.create(task_id: global_options[:task], title: Dialog::new_subtask_title)
        say("Подзадача ##{subtasks.new_subtask_id} к задаче ##{global_options[:task]} добавлена")
      end
    else
      Dialog.ask_new_task
      tasks.create(title: Dialog::new_task_title, description: Dialog::new_task_description)
      say("Задача '#{Dialog::new_task_title}' (##{tasks.new_task_id}) добавлена")
    end
  end
end

desc 'Просмотр перечня задач, подзадач и заметок'
arg_name 'Режим вывода списка'
command :list do |c|
  c.desc 'Полный список'
  c.switch :a, :all, :negatable => false
  c.action do |global_options,options,args|
    list_method = options[:all] ? :list : :last
    if global_options[:task]
      Dialog.say_task(task: tasks.info(global_options[:task]), 
          subtasks: subtasks.active(global_options[:task]),
          notes: notes.__send__(list_method, global_options[:task]))
    else
      Dialog.say_tasks(tasks.__send__(list_method))
    end
  end
end

desc 'Вывести отчет'
arg_name 'Период отчета'
command :report do |c|
  c.desc 'Недельный отчет'
  c.switch :w, :week, :negatable => false
  c.action do |global_options,options,args|
    Dialog.say_report(report.week)
  end
end

exit run(ARGV)